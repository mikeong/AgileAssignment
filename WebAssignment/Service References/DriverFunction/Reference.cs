//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebAssignment.DriverFunction {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DriverFunction.DriverSoap")]
    public interface DriverSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLatestCustomers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLatestCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLatestCustomers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLatestCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertLatestCustomers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertLatestCustomers(string driverID, string driverName, string driverAge, string driverGender, string driverRace, string driverLicence, string driverAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertLatestCustomers", ReplyAction="*")]
        System.Threading.Tasks.Task<int> InsertLatestCustomersAsync(string driverID, string driverName, string driverAge, string driverGender, string driverRace, string driverLicence, string driverAddress);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DriverSoapChannel : WebAssignment.DriverFunction.DriverSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DriverSoapClient : System.ServiceModel.ClientBase<WebAssignment.DriverFunction.DriverSoap>, WebAssignment.DriverFunction.DriverSoap {
        
        public DriverSoapClient() {
        }
        
        public DriverSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DriverSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DriverSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DriverSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetLatestCustomers() {
            return base.Channel.GetLatestCustomers();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLatestCustomersAsync() {
            return base.Channel.GetLatestCustomersAsync();
        }
        
        public int InsertLatestCustomers(string driverID, string driverName, string driverAge, string driverGender, string driverRace, string driverLicence, string driverAddress) {
            return base.Channel.InsertLatestCustomers(driverID, driverName, driverAge, driverGender, driverRace, driverLicence, driverAddress);
        }
        
        public System.Threading.Tasks.Task<int> InsertLatestCustomersAsync(string driverID, string driverName, string driverAge, string driverGender, string driverRace, string driverLicence, string driverAddress) {
            return base.Channel.InsertLatestCustomersAsync(driverID, driverName, driverAge, driverGender, driverRace, driverLicence, driverAddress);
        }
    }
}
